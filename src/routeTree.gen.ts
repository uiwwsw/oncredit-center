/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as OauthImport } from './routes/oauth'
import { Route as IndexImport } from './routes/index'
import { Route as StoreStoreIdImport } from './routes/store/$storeId'
import { Route as OrderStoreIdImport } from './routes/order/$storeId'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const OauthRoute = OauthImport.update({
  id: '/oauth',
  path: '/oauth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StoreStoreIdRoute = StoreStoreIdImport.update({
  id: '/store/$storeId',
  path: '/store/$storeId',
  getParentRoute: () => rootRoute,
} as any)

const OrderStoreIdRoute = OrderStoreIdImport.update({
  id: '/order/$storeId',
  path: '/order/$storeId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/oauth': {
      id: '/oauth'
      path: '/oauth'
      fullPath: '/oauth'
      preLoaderRoute: typeof OauthImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/order/$storeId': {
      id: '/order/$storeId'
      path: '/order/$storeId'
      fullPath: '/order/$storeId'
      preLoaderRoute: typeof OrderStoreIdImport
      parentRoute: typeof rootRoute
    }
    '/store/$storeId': {
      id: '/store/$storeId'
      path: '/store/$storeId'
      fullPath: '/store/$storeId'
      preLoaderRoute: typeof StoreStoreIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/oauth': typeof OauthRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/order/$storeId': typeof OrderStoreIdRoute
  '/store/$storeId': typeof StoreStoreIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/oauth': typeof OauthRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/order/$storeId': typeof OrderStoreIdRoute
  '/store/$storeId': typeof StoreStoreIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/oauth': typeof OauthRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/order/$storeId': typeof OrderStoreIdRoute
  '/store/$storeId': typeof StoreStoreIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/oauth'
    | '/sign-in'
    | '/sign-up'
    | '/order/$storeId'
    | '/store/$storeId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/oauth'
    | '/sign-in'
    | '/sign-up'
    | '/order/$storeId'
    | '/store/$storeId'
  id:
    | '__root__'
    | '/'
    | '/oauth'
    | '/sign-in'
    | '/sign-up'
    | '/order/$storeId'
    | '/store/$storeId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OauthRoute: typeof OauthRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  OrderStoreIdRoute: typeof OrderStoreIdRoute
  StoreStoreIdRoute: typeof StoreStoreIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OauthRoute: OauthRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  OrderStoreIdRoute: OrderStoreIdRoute,
  StoreStoreIdRoute: StoreStoreIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/oauth",
        "/sign-in",
        "/sign-up",
        "/order/$storeId",
        "/store/$storeId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/oauth": {
      "filePath": "oauth.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/order/$storeId": {
      "filePath": "order/$storeId.tsx"
    },
    "/store/$storeId": {
      "filePath": "store/$storeId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
